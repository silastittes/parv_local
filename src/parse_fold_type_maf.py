import gzip
import argparse
import random

#-m {input.maf} -f {input.fold} -n {params.nucs} 
parser = argparse.ArgumentParser(
    prog = "Select a subset of input sites that are of a particular mutation type",
    description = "Given a maf file generated by angsd that includes the ancestral allele, outputs sites that follow a particular mutation type."
)


parser.add_argument('-m', '--maf_file', nargs='+', type=str, required = True,
            help='One or more space separated set of maf files generated by angsd. Assumes columns: chromo, position, major, minor, ref, anc, unknownEM, nInd')

parser.add_argument('-f', '--site_file', type=str, required = True,
            help='The set of input sites that will be subet. Expects column to be: chromosome, position.')

parser.add_argument('-n', '--nuc_type', type = str, required = True, 
            help = 'The set of comma separted mutation types to select. For example, "AT,GC" would select sites with ancestral state A or G, and derived state T or C.')

args = parser.parse_args()

def openfile(filename):
    if filename.endswith(".gz"):
        return gzip.open(filename, "rt")
    else:
        return open(filename, "r")

#build dictionary keys from input sites
def make_site_dict(sites_file):
    sites = {}
    with openfile(sites_file) as f:
        for line in f:
            ln = line.strip().split()
            chrom, pos = ln[0:2]
            sites[f"{chrom}{pos}"] = ""
    return sites

def nuc_type(maf_line, site_dict, nuc_string):

    mut_types = nuc_string.split(",")

    chrom, pos, major, minor, ref, anc, unknownEM, nInd = maf_line.strip().split()
    if f"{chrom}{pos}" in site_dict:
        if (ref == major or ref == minor) and (anc == major or anc == minor):
            if f"{anc}{major}" in mut_types or f"{anc}{minor}" in mut_types:
                print(f"{chrom}\t{pos}")

in_sites = make_site_dict(args.site_file)

for maf_file in args.maf_file:
    with openfile(maf_file) as f:
        first = f.readline()
        for line in f:
            nuc_type(line, in_sites, args.nuc_type)
